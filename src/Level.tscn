[gd_scene load_steps=6 format=3 uid="uid://ckcfe4ne4dn06"]

[ext_resource type="Script" path="res://Main.gd" id="2"]
[ext_resource type="PackedScene" uid="uid://xpw7mkqjq2sc" path="res://Player.tscn" id="3_6qooj"]
[ext_resource type="PackedScene" uid="uid://oah241t1en8r" path="res://Ground.tscn" id="6"]

[sub_resource type="GDScript" id="GDScript_mne27"]
script/source = "extends Camera3D

@export var Player :CharacterBody3D 
@export var distance = 5.0
@export var height = 3.0


var offset : Vector3
var target

func _init():
	pass

func _ready():
	offset = get_global_transform().origin
	target = Player.get_global_transform().origin
	

func _physics_process(delta):
	var pos = get_global_transform().origin
	
	var up = Vector3(0, 1, 0)
		
	if (Player != null):
		target = Player.get_global_transform().origin
		
		var angle = Player.get_rotation().y   
		var offset = Vector3(sin(angle),0, cos(angle)) * 10 
		offset = offset.normalized()*distance
		offset.y = height
		
		pos = target + offset
		look_at_from_position(pos, target, up)
	else:
		if distance < 40:
			distance += .1
			height += .1
		var offset = pos - target
		offset = offset.normalized()*distance
		offset.y = height
		pos = target + offset
		look_at_from_position(pos, target, up)
"

[sub_resource type="NavigationMesh" id="NavigationMesh_ekeqw"]
vertices = PackedVector3Array(-81.25, -0.38322, -122.939, -92.5, -0.38322, -122.939, -92.5, -0.38322, -114.939, -81.25, -0.38322, -122.939, -92.5, -0.38322, -114.939, -92.5, -0.38322, -106.939, -81.25, -0.38322, -122.939, -92.5, -0.38322, -106.939, -92.5, -0.38322, -98.939, -70, -0.38322, -122.939, -81.25, -0.38322, -122.939, -92.5, -0.38322, -98.939, -92.5, -0.38322, -90.689, -58.75, -0.38322, -122.939, -92.5, -0.38322, -74.439, -92.5, -0.38322, -66.439, -47.5, -0.38322, -122.939, -70, -0.38322, -122.939, -92.5, -0.38322, -90.689, -92.5, -0.38322, -82.689, -58.75, -0.38322, -122.939, -70, -0.38322, -122.939, -92.5, -0.38322, -82.689, -92.5, -0.38322, -74.439, -4.5, -0.38322, -58.189, -36.25, -0.38322, -122.939, -47.5, -0.38322, -122.939, -92.5, -0.38322, -66.439, -92.5, -0.38322, -58.189, -4.5, -0.38322, -60.189, -2.25, -0.38322, -60.439, -2.25, -0.38322, -122.939, -13.75, -0.38322, -122.939, -4.5, -0.38322, -58.189, -25, -0.38322, -122.939, -36.25, -0.38322, -122.939, -4.5, -0.38322, -58.189, -4.5, -0.38322, -60.189, -13.75, -0.38322, -122.939, -25, -0.38322, -122.939, -2.25, -0.38322, -60.439, 2.5, -0.38322, -60.439, 2.5, -0.38322, -122.939, -2.25, -0.38322, -122.939, 4.75, -0.38322, -60.189, 4.75, -0.38322, -51.689, 27, -0.38322, -47.939, 35.5, -0.38322, -47.939, 35.5, -0.38322, -122.939, 27.25, -0.38322, -122.939, 19, -0.38322, -122.939, 10.75, -0.38322, -122.939, 4.75, -0.38322, -60.189, 2.5, -0.38322, -122.939, 2.5, -0.38322, -60.439, 4.75, -0.38322, -60.189, 10.75, -0.38322, -122.939, 27.25, -0.38322, -122.939, 19, -0.38322, -122.939, 4.75, -0.38322, -60.189, 90.5, -0.38322, -113.439, 90.5, -0.38322, -122.939, 83.5, -0.38322, -122.939, 90.5, -0.38322, -113.439, 83.5, -0.38322, -122.939, 76.75, -0.38322, -122.939, 90.5, -0.38322, -113.439, 76.75, -0.38322, -122.939, 69.75, -0.38322, -122.939, 90.5, -0.38322, -103.939, 90.5, -0.38322, -113.439, 69.75, -0.38322, -122.939, 63, -0.38322, -122.939, 90.5, -0.38322, -94.439, 49.25, -0.38322, -122.939, 42.25, -0.38322, -122.939, 90.5, -0.38322, -84.689, 90.5, -0.38322, -103.939, 63, -0.38322, -122.939, 56, -0.38322, -122.939, 90.5, -0.38322, -94.439, 90.5, -0.38322, -103.939, 56, -0.38322, -122.939, 49.25, -0.38322, -122.939, 35.5, -0.38322, -47.939, 90.5, -0.38322, -75.189, 90.5, -0.38322, -84.689, 42.25, -0.38322, -122.939, 35.5, -0.38322, -122.939, 37.5, -0.38322, -47.939, 37.75, -0.38322, -46.189, 90.5, -0.38322, -46.439, 90.5, -0.38322, -56.189, 35.5, -0.38322, -47.939, 90.5, -0.38322, -65.689, 90.5, -0.38322, -75.189, 35.5, -0.38322, -47.939, 37.5, -0.38322, -47.939, 90.5, -0.38322, -56.189, 90.5, -0.38322, -65.689, -3.5, 9.36678, -59.439, -3.5, 9.36678, -52.189, 3.5, 9.36678, -52.189, 3.5, 9.36678, -59.439, -92.5, -0.38322, -53.439, -4.5, -0.38322, -53.439, -4.5, -0.38322, -58.189, -92.5, -0.38322, -58.189, -92.5, -0.38322, 52.811, -92.5, -0.38322, 60.061, -81.5, -0.38322, 60.061, -3, -0.38322, 60.061, -2.75, -0.38322, 44.311, -4.5, -0.38322, 44.061, -14.25, -0.38322, 60.061, -92.5, -0.38322, 45.811, -92.5, -0.38322, 52.811, -81.5, -0.38322, 60.061, -4.5, -0.38322, -51.439, -4.5, -0.38322, -53.439, -92.5, -0.38322, -53.439, -92.5, -0.38322, -46.439, -92.5, -0.38322, 38.561, -92.5, -0.38322, 45.811, -81.5, -0.38322, 60.061, -25.5, -0.38322, 60.061, -14.25, -0.38322, 60.061, -4.5, -0.38322, 44.061, -92.5, -0.38322, 31.561, -92.5, -0.38322, 38.561, -81.5, -0.38322, 60.061, -25.5, -0.38322, 60.061, -4.5, -0.38322, 44.061, -4.5, -0.38322, 35.311, -36.75, -0.38322, 60.061, -92.5, -0.38322, 31.561, -81.5, -0.38322, 60.061, -70.25, -0.38322, 60.061, -92.5, -0.38322, 24.311, -92.5, -0.38322, -25.189, -92.5, -0.38322, -18.189, -59, -0.38322, 60.061, -4.5, -0.38322, -51.439, -92.5, -0.38322, -46.439, -92.5, -0.38322, -39.439, -92.5, -0.38322, 17.311, -92.5, -0.38322, 24.311, -70.25, -0.38322, 60.061, -47.75, -0.38322, 60.061, -36.75, -0.38322, 60.061, -4.5, -0.38322, 35.311, -92.5, -0.38322, 17.311, -70.25, -0.38322, 60.061, -59, -0.38322, 60.061, -92.5, -0.38322, 10.311, -59, -0.38322, 60.061, -47.75, -0.38322, 60.061, -4.5, -0.38322, 35.311, -4.5, -0.38322, -51.439, -92.5, -0.38322, -39.439, -92.5, -0.38322, -32.439, -92.5, -0.38322, 3.311, -92.5, -0.38322, 10.311, -59, -0.38322, 60.061, -92.5, -0.38322, -3.939, -92.5, -0.38322, 3.311, -59, -0.38322, 60.061, -92.5, -0.38322, -10.939, -92.5, -0.38322, -3.939, -59, -0.38322, 60.061, -92.5, -0.38322, -18.189, -92.5, -0.38322, -10.939, -59, -0.38322, 60.061, -4.5, -0.38322, 35.311, -2.5, -0.38322, 35.061, -2.5, -0.38322, -51.189, -4.5, -0.38322, 35.311, -2.5, -0.38322, -51.189, -4.5, -0.38322, -51.439, -92.5, -0.38322, -32.439, -92.5, -0.38322, -25.189, -59, -0.38322, 60.061, 26.5, -0.38322, -47.439, 27, -0.38322, -47.939, 4.75, -0.38322, -51.689, 4.25, -0.38322, -51.189, -2.5, -0.38322, 35.061, 4.25, -0.38322, 35.061, 5, -0.38322, 34.061, 41.5, -0.38322, -20.439, 37.25, -0.38322, -38.689, 26.75, -0.38322, -38.689, 41.5, -0.38322, -11.439, 26.75, -0.38322, -38.689, 26.5, -0.38322, -47.439, 4.25, -0.38322, -51.189, -2.5, -0.38322, -51.189, 5, -0.38322, 34.061, 41.5, -0.38322, 15.811, 41.5, -0.38322, 6.561, 41.5, -0.38322, 6.561, 41.5, -0.38322, -2.439, 26.75, -0.38322, -38.689, -2.5, -0.38322, -51.189, -2.5, -0.38322, 35.061, 5, -0.38322, 34.061, 41.5, -0.38322, -2.439, 41.5, -0.38322, -11.439, 26.75, -0.38322, -38.689, 27.5, 9.11678, -46.939, 27.5, 9.11678, -39.689, 36.5, 9.11678, -39.689, 36.5, 9.11678, -46.939, 37.75, -0.38322, -39.189, 42, -0.38322, -20.939, 46.5, -0.38322, -20.939, 90.5, -0.38322, -39.689, 90.5, -0.38322, -46.439, 37.75, -0.38322, -46.189, 46.5, -0.38322, -20.939, 90.5, -0.38322, -26.189, 90.5, -0.38322, -32.939, 46.5, -0.38322, -20.939, 46.75, -0.38322, -19.189, 90.5, -0.38322, -19.439, 90.5, -0.38322, -26.189, 46.5, -0.38322, -20.939, 90.5, -0.38322, -32.939, 90.5, -0.38322, -39.689, 37.25, -0.38322, -38.689, 41.5, -0.38322, -20.439, 42, -0.38322, -20.939, 37.75, -0.38322, -39.189, 45.5, 8.86678, -11.189, 45.5, 8.86678, -19.939, 42.5, 8.86678, -19.939, 42.5, 8.86678, -11.189, 42.5, 8.86678, 6.311, 42.5, 8.86678, 15.311, 45.5, 8.86678, 15.311, 45.5, 8.86678, 6.311, 45.5, 8.86678, -2.439, 45.5, 8.86678, -11.189, 42.5, 8.86678, -11.189, 42.5, 8.86678, -2.439, 42.5, 8.86678, -2.439, 42.5, 8.86678, 6.311, 45.5, 8.86678, 6.311, 45.5, 8.86678, -2.439, 90.5, -0.38322, -10.939, 90.5, -0.38322, -19.439, 46.75, -0.38322, -19.189, 46.75, -0.38322, -10.939, 46.75, -0.38322, -2.439, 46.75, -0.38322, 6.061, 90.5, -0.38322, 6.061, 90.5, -0.38322, -2.439, 46.75, -0.38322, 14.561, 90.5, -0.38322, 14.811, 90.5, -0.38322, 6.061, 46.75, -0.38322, 6.061, 90.5, -0.38322, -2.439, 90.5, -0.38322, -10.939, 46.75, -0.38322, -10.939, 46.75, -0.38322, -2.439, 79, -0.38322, 60.061, 90.5, -0.38322, 60.061, 90.5, -0.38322, 48.561, 67.75, -0.38322, 60.061, 79, -0.38322, 60.061, 90.5, -0.38322, 48.561, 67.75, -0.38322, 60.061, 90.5, -0.38322, 48.561, 90.5, -0.38322, 37.311, 56.5, -0.38322, 60.061, 90.5, -0.38322, 14.811, 46.75, -0.38322, 14.561, 46.5, -0.38322, 16.311, 90.5, -0.38322, 26.061, 46.5, -0.38322, 16.311, 45, -0.38322, 16.311, 45.25, -0.38322, 60.061, 56.5, -0.38322, 60.061, 90.5, -0.38322, 37.311, 90.5, -0.38322, 26.061, 5, -0.38322, 34.061, 42, -0.38322, 16.311, 41.5, -0.38322, 15.811, 5, -0.38322, 34.061, 4.25, -0.38322, 35.061, 4.75, -0.38322, 35.311, 5, -0.38322, 34.061, 4.75, -0.38322, 35.311, 4.75, -0.38322, 43.811, 23, -0.38322, 60.061, 33, -0.38322, 60.061, 4.25, -0.38322, 44.311, 2.75, -0.38322, 44.311, 3, -0.38322, 60.061, 4.75, -0.38322, 43.811, 4.25, -0.38322, 44.311, 3, -0.38322, 60.061, 13, -0.38322, 60.061, 43.25, -0.38322, 16.311, 42, -0.38322, 16.311, 5, -0.38322, 34.061, 33, -0.38322, 60.061, 43, -0.38322, 60.061, 4.75, -0.38322, 43.811, 13, -0.38322, 60.061, 23, -0.38322, 60.061, 43, -0.38322, 60.061, 45.25, -0.38322, 60.061, 45, -0.38322, 16.311, 43.25, -0.38322, 16.311, -3.5, 8.86678, 36.061, -3.5, 8.86678, 43.061, 3.5, 8.86678, 43.061, 3.5, 8.86678, 36.061, -3, -0.38322, 60.061, 3, -0.38322, 60.061, 2.75, -0.38322, 44.311, -2.75, -0.38322, 44.311)
polygons = [PackedInt32Array(2, 1, 0), PackedInt32Array(5, 4, 3), PackedInt32Array(8, 7, 6), PackedInt32Array(11, 10, 12), PackedInt32Array(12, 10, 9), PackedInt32Array(14, 13, 15), PackedInt32Array(15, 13, 16), PackedInt32Array(19, 18, 17), PackedInt32Array(22, 21, 23), PackedInt32Array(23, 21, 20), PackedInt32Array(27, 26, 28), PackedInt32Array(28, 26, 25), PackedInt32Array(28, 25, 24), PackedInt32Array(30, 29, 31), PackedInt32Array(31, 29, 32), PackedInt32Array(35, 34, 33), PackedInt32Array(37, 36, 38), PackedInt32Array(38, 36, 39), PackedInt32Array(43, 42, 40), PackedInt32Array(40, 42, 41), PackedInt32Array(45, 44, 46), PackedInt32Array(46, 44, 47), PackedInt32Array(47, 44, 49), PackedInt32Array(47, 49, 48), PackedInt32Array(52, 51, 50), PackedInt32Array(54, 53, 55), PackedInt32Array(55, 53, 56), PackedInt32Array(59, 58, 57), PackedInt32Array(62, 61, 60), PackedInt32Array(65, 64, 63), PackedInt32Array(68, 67, 66), PackedInt32Array(71, 70, 72), PackedInt32Array(72, 70, 69), PackedInt32Array(74, 73, 75), PackedInt32Array(75, 73, 76), PackedInt32Array(79, 78, 77), PackedInt32Array(82, 81, 83), PackedInt32Array(83, 81, 80), PackedInt32Array(87, 86, 88), PackedInt32Array(88, 86, 85), PackedInt32Array(88, 85, 84), PackedInt32Array(90, 89, 91), PackedInt32Array(91, 89, 92), PackedInt32Array(95, 94, 93), PackedInt32Array(97, 96, 98), PackedInt32Array(98, 96, 99), PackedInt32Array(103, 102, 100), PackedInt32Array(100, 102, 101), PackedInt32Array(107, 106, 104), PackedInt32Array(104, 106, 105), PackedInt32Array(110, 109, 108), PackedInt32Array(112, 111, 113), PackedInt32Array(113, 111, 114), PackedInt32Array(117, 116, 115), PackedInt32Array(119, 118, 120), PackedInt32Array(120, 118, 121), PackedInt32Array(124, 123, 122), PackedInt32Array(127, 126, 125), PackedInt32Array(130, 129, 128), PackedInt32Array(132, 131, 133), PackedInt32Array(133, 131, 134), PackedInt32Array(135, 138, 136), PackedInt32Array(136, 138, 137), PackedInt32Array(141, 140, 139), PackedInt32Array(144, 143, 142), PackedInt32Array(147, 146, 145), PackedInt32Array(150, 149, 148), PackedInt32Array(151, 154, 152), PackedInt32Array(152, 154, 153), PackedInt32Array(157, 156, 155), PackedInt32Array(160, 159, 158), PackedInt32Array(163, 162, 161), PackedInt32Array(166, 165, 164), PackedInt32Array(169, 168, 167), PackedInt32Array(172, 171, 170), PackedInt32Array(175, 174, 173), PackedInt32Array(177, 176, 178), PackedInt32Array(178, 176, 181), PackedInt32Array(178, 181, 180), PackedInt32Array(178, 180, 179), PackedInt32Array(185, 184, 182), PackedInt32Array(182, 184, 183), PackedInt32Array(188, 187, 186), PackedInt32Array(190, 189, 191), PackedInt32Array(191, 189, 192), PackedInt32Array(194, 193, 195), PackedInt32Array(195, 193, 196), PackedInt32Array(199, 198, 197), PackedInt32Array(201, 200, 202), PackedInt32Array(202, 200, 203), PackedInt32Array(203, 200, 205), PackedInt32Array(203, 205, 204), PackedInt32Array(208, 207, 206), PackedInt32Array(212, 211, 209), PackedInt32Array(209, 211, 210), PackedInt32Array(214, 213, 215), PackedInt32Array(215, 213, 218), PackedInt32Array(215, 218, 216), PackedInt32Array(216, 218, 217), PackedInt32Array(221, 220, 219), PackedInt32Array(223, 222, 224), PackedInt32Array(224, 222, 225), PackedInt32Array(228, 227, 226), PackedInt32Array(232, 231, 229), PackedInt32Array(229, 231, 230), PackedInt32Array(236, 235, 233), PackedInt32Array(233, 235, 234), PackedInt32Array(240, 239, 237), PackedInt32Array(237, 239, 238), PackedInt32Array(244, 243, 241), PackedInt32Array(241, 243, 242), PackedInt32Array(248, 247, 245), PackedInt32Array(245, 247, 246), PackedInt32Array(252, 251, 249), PackedInt32Array(249, 251, 250), PackedInt32Array(256, 255, 253), PackedInt32Array(253, 255, 254), PackedInt32Array(260, 259, 257), PackedInt32Array(257, 259, 258), PackedInt32Array(264, 263, 261), PackedInt32Array(261, 263, 262), PackedInt32Array(267, 266, 265), PackedInt32Array(270, 269, 268), PackedInt32Array(272, 271, 273), PackedInt32Array(273, 271, 274), PackedInt32Array(276, 275, 277), PackedInt32Array(277, 275, 278), PackedInt32Array(280, 279, 281), PackedInt32Array(281, 279, 282), PackedInt32Array(282, 279, 283), PackedInt32Array(283, 279, 284), PackedInt32Array(287, 286, 285), PackedInt32Array(289, 288, 290), PackedInt32Array(292, 291, 293), PackedInt32Array(293, 291, 294), PackedInt32Array(294, 291, 295), PackedInt32Array(298, 297, 296), PackedInt32Array(300, 299, 301), PackedInt32Array(301, 299, 302), PackedInt32Array(304, 303, 305), PackedInt32Array(305, 303, 306), PackedInt32Array(306, 303, 307), PackedInt32Array(310, 309, 308), PackedInt32Array(314, 313, 311), PackedInt32Array(311, 313, 312), PackedInt32Array(318, 317, 315), PackedInt32Array(315, 317, 316), PackedInt32Array(322, 321, 319), PackedInt32Array(319, 321, 320)]
agent_max_climb = 1.0

[node name="Level" type="Node3D"]
script = ExtResource("2")

[node name="Camera" type="Camera3D" parent="." node_paths=PackedStringArray("Player")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 3.3034, 15.2578)
top_level = true
current = true
script = SubResource("GDScript_mne27")
Player = NodePath("../Player")

[node name="DirectionalLight" type="DirectionalLight3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 0.479917, 0.877314, 0, -0.877314, 0.479917, 2.8446, 32.5298, 21.3054)
light_energy = 0.583
light_indirect_energy = 1.028
shadow_enabled = true

[node name="Player" parent="." instance=ExtResource("3_6qooj")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2, 12)

[node name="NavigationRegion3d" type="NavigationRegion3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -1, 0, 0)
navmesh = SubResource("NavigationMesh_ekeqw")

[node name="Ground" parent="NavigationRegion3d" instance=ExtResource("6")]

[node name="EnemySpawnTimer" type="Timer" parent="."]
autostart = true

[node name="SpawnPoints" type="Marker3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -61, -3, 0)

[node name="Marker3d6" type="Marker3D" parent="SpawnPoints" groups=["spawn_point"]]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 112, 4, -2)

[node name="Marker3d5" type="Marker3D" parent="SpawnPoints" groups=["spawn_point"]]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 6, 4, 0)

[node name="Marker3d4" type="Marker3D" parent="SpawnPoints" groups=["spawn_point"]]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 61, 4, -68)

[node name="Marker3d3" type="Marker3D" parent="SpawnPoints" groups=["spawn_point"]]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 2, 4, -66)

[node name="Marker3d2" type="Marker3D" parent="SpawnPoints" groups=["spawn_point"]]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 6, 4, 61)

[node name="Marker3d" type="Marker3D" parent="SpawnPoints" groups=["spawn_point"]]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 106, 4, 31)

[connection signal="timeout" from="EnemySpawnTimer" to="." method="_on_enemy_spawn_timer_timeout"]
